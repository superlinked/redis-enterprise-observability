## All options defined here are available to all instances.
#
init_config:

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Additionally, this sets the default `service` for every log source.
    #
    # service: <SERVICE>

## Every instance is scheduled independently of the others.
#
instances:

    ## @param prometheus_url - string - required
    ## The URL where your application metrics are exposed by Prometheus.
    #
  - prometheus_url: PROMETHEUS_HOST:8070

    ## @param namespace - string - required
    ## The namespace to be prepended to all metrics.
    #
    namespace: redise

    ## @param metrics - (list of mapping or string) - required
    ## List of `<METRIC_TO_FETCH>: <NEW_METRIC_NAME>` for metrics to be fetched from the Prometheus endpoint.
    ## `<NEW_METRIC_NAME>` is optional. If set, it transforms the name in Datadog.
    ## This list should contain at least one metric.
    #
    metrics:
      - "*"

    ## @param prometheus_metrics_prefix - string - optional
    ## Prefix for exposed Prometheus metrics.
    #
    # prometheus_metrics_prefix: <PREFIX>_

## All options defined here are available to all instances.
#
init_config:

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Additionally, this sets the default `service` for every log source.
    #
    # service: <SERVICE>

## Every instance is scheduled independently of the others.
#
instances:

    ## @param prometheus_url - string - required
    ## The URL where your application metrics are exposed by Prometheus.
    #
  - prometheus_url: https://internal.c28486.us-central1-mz.gcp.cloud.rlrcp.com:8070

    ## @param namespace - string - required
    ## The namespace to be prepended to all metrics.
    #
    namespace: redise

    ## @param metrics - (list of mapping or string) - required
    ## List of `<METRIC_TO_FETCH>: <NEW_METRIC_NAME>` for metrics to be fetched from the Prometheus endpoint.
    ## `<NEW_METRIC_NAME>` is optional. If set, it transforms the name in Datadog.
    ## This list should contain at least one metric.
    #
    metrics:
      - "*"

    ## @param prometheus_metrics_prefix - string - optional
    ## Prefix for exposed Prometheus metrics.
    #
    # prometheus_metrics_prefix: <PREFIX>_

    ## @param health_service_check - boolean - optional - default: true
    ## Send a service check reporting about the health of the Prometheus endpoint.
    ## The service check is named `<NAMESPACE>.prometheus.health`.
    #
    # health_service_check: true

    ## @param label_to_hostname - string - optional
    ## Override the hostname with the value of one label.
    #
    # label_to_hostname: <LABEL>

    ## @param label_joins - mapping - optional
    ## Allows the targeting of a metric to retrieve its label with a 1:1 mapping.
    #
    # label_joins:
    #   target_metric:
    #     label_to_match: <MATCHED_LABEL>
    #     labels_to_get:
    #     - <EXTRA_LABEL_1>
    #     - <EXTRA_LABEL_2>

    ## @param labels_mapper - mapping - optional
    ## The label mapper allows you to rename labels.
    ## Format is `<LABEL_TO_RENAME>: <NEW_LABEL_NAME>`.
    #
    # labels_mapper:
    #   flavor: origin

    ## @param type_overrides - mapping - optional
    ## Override a type in the Prometheus payload or type an untyped metric (ignored by default).
    ## Supported <METRIC_TYPE> are `gauge`, `counter`, `histogram`, and `summary`.
    #
    type_overrides:
			redis_active_defrag_running: gauge
			redis_allocator_active: counter
			redis_allocator_allocated: gauge
			redis_allocator_resident: gauge
			redis_aof_last_cow_size: gauge
			redis_aof_rewrite_in_progress: gauge
			redis_aof_rewrites: counter
			redis_big_inst_avg_del_io_queue: gauge
			redis_big_inst_avg_io_blocked_clients: gauge
			redis_big_inst_avg_io_postponed_clients: gauge
			redis_big_inst_avg_read_io_queueL: gauge
			redis_big_inst_avg_write_io_queue: gauge
			redis_big_io_dels: counter
			redis_big_io_ratio_flash: gauge
			redis_big_io_ratio_redis: gauge
			redis_big_io_read_bytes: gauge
			redis_big_io_reads: gauge
			redis_big_io_write_bytes: gauge
			redis_big_io_writes: gauge
			redis_big_user_io_ratio_flash: gauge
			redis_big_user_io_ratio_redis: gauge
			redis_bigdb_clean: gauge
			redis_bigdb_dirty: gauge
			redis_bigdb_disk: gauge
			redis_bigdb_ram: gauge
			redis_blocked_clients: gauge
			redis_blocking_reads: gauge
			redis_blocking_writes: gauge
			redis_connected_clients: gauge
			redis_connected_slaves: gauge
			redis_current_cow_size: gauge
			redis_current_cow_size_age: gauge
			redis_current_fork_perc: gauge
			redis_db0_avg_ttl: counter
			redis_db0_expires: gauge
			redis_db0_keys: gauge
			redis_db_avg_ttl: counter
			redis_db_expires: gauge
			redis_db_keys: gauge
			redis_disk_allocation: gauge
			redis_disk_fragmentation_ratio: histogram
			redis_dump_payload_sanitizations: gauge
			redis_evicted_keys: gauge
			redis_expire_cycle_cpu_milliseconds: gauge
			redis_expired_keys: gauge
			redis_forwarding_state: gauge
			redis_instantaneous_input_kbps: gauge
			redis_instantaneous_ops_per_sec: gauge
			redis_instantaneous_output_kbps: gauge
			redis_keys_trimmed: gauge
			redis_keyspace_read_hits: gauge
			redis_keyspace_read_misses: gauge
			redis_keyspace_write_hits: gauge
			redis_keyspace_write_misses: gauge
			redis_lazyfreed_objects: gauge
			redis_master_link_status: gauge
			redis_master_repl_offset: gauge
			redis_master_repl_offset2: gauge
			redis_master_repl_offset3: gauge
			redis_master_repl_offset4: gauge
			redis_master_sync_attempts: gauge
			redis_master_sync_in_progress: gauge
			redis_max_process_mem: counter
			redis_max_ram: counter
			redis_maxclients: counter
			redis_maxmemory: counter
			redis_mem_aof_buffer: gauge
			redis_mem_clients_normal: gauge
			redis_mem_clients_slaves: gauge
			redis_mem_fragmentation_ratio: histogram
			redis_mem_not_counted_for_evict: gauge
			redis_mem_replication_backlog: gauge
			redis_module_fork_in_progress: gauge
			redis_prefetch_nonblocking: gauge
			redis_process_cpu_system_seconds_total: counter
			redis_process_cpu_usage_percent: gauge
			redis_process_cpu_user_seconds_total: counter
			redis_process_main_thread_cpu_system_seconds_total: counter
			redis_process_main_thread_cpu_user_seconds_total: counter
			redis_process_max_fds: counter
			redis_process_open_fds: gauge
			redis_process_resident_memory_bytes: gauge
			redis_process_start_time_seconds: counter
			redis_process_virtual_memory_bytes: gauge
			redis_pubsub_channels: gauge
			redis_pubsub_patterns: gauge
			redis_ram_clean_evictions: counter
			redis_ram_del_hit_ratio_flash: gauge
			redis_ram_del_hit_ratio_ram: gauge
			redis_ram_dirty_evictions: counter
			redis_ram_fetch_hit_ratio_flash: gauge
			redis_ram_fetch_hit_ratio_ram: gauge
			redis_ram_overhead: gauge
			redis_ram_write_hit_ratio_flash: gauge
			redis_ram_write_hit_ratio_ram: gauge
			redis_rdb_bgsave_in_progress: gauge
			redis_rdb_changes_since_last_save: gauge
			redis_rdb_last_cow_size: counter
			redis_rdb_last_save_time: counter
			redis_rdb_saves: gauge
			redis_repl_touch_bytes: counter
			redis_sync_full: gauge
			redis_sync_partial_err: gauge
			redis_sync_partial_ok: gauge
			redis_total_commands_processed: counter
			redis_total_connections_received: counter
			redis_total_error_replies: counter
			redis_total_forks: counter
			redis_total_net_input_bytes: counter
			redis_total_net_output_bytes: counter
			redis_up: gauge
			redis_used_disk: gauge
			redis_used_memory: gauge
			redis_used_memory_dataset: gauge
			redis_used_memory_lua: gauge
			redis_used_memory_overhead: gauge
			redis_used_memory_peak: counter
			redis_used_memory_rss: gauge
			redis_used_memory_scripts: gauge
			redis_used_memory_startup: gauge
			redis_used_ram: gauge
			redis_wait_busy_key: gauge

			# replication database
			bdb_crdt_syncer_status: gauge
			bdb_crdt_syncer_ingress_bytes: gauge
			bdb_crdt_syncer_egress_bytes: gauge
			bdb_crdt_syncer_local_ingress_lag_time: histogram
			bdb_crdt_syncer_ingress_bytes_decompressed: gauge
			bdb_crdt_syncer_egress_bytes_decompressed: gauge
			bdb_crdt_syncer_pending_local_writes_max: gauge

			# replication - shard
			redis_crdt_backlog_histlen: gauge
			redis_crdt_backlog_idx: gauge
			redis_crdt_backlog_master_offset: gauge
			redis_crdt_backlog_offset: gauge
			redis_crdt_backlog_refs: gauge
			redis_crdt_backlog_size: gauge
			redis_crdt_clock: gauge
			redis_crdt_effect_reqs: gauge
			redis_crdt_gc_attempted: counter
			redis_crdt_gc_collected: counter
			redis_crdt_gc_elements_attempted: counter
			redis_crdt_gc_elements_collected: counter
			redis_crdt_gc_pending: gauge
			redis_crdt_gc_skipped: gauge
			redis_crdt_key_headers: gauge
			redis_crdt_list_trimmed_vertices: gauge
			redis_crdt_merge_reqs: histogram
			redis_crdt_oom_latch: gauge
			redis_crdt_ovc_filtered_effect_reqs: gauge
			redis_crdt_peer_dst_id: gauge
			redis_crdt_peer_id: gauge
			redis_crdt_peer_lag: gauge
			redis_crdt_peer_offset: gauge
			redis_crdt_peer_peer_state: gauge
			redis_crdt_pending_list_trimmed_vertices: gauge
			redis_crdt_raw_dbsize: gauge
			redis_crdt_replica_config_version: gauge
			redis_crdt_replica_max_ops_lag: counter
			redis_crdt_replica_min_ops_lag: gauge
			redis_crdt_replica_shards: gauge
			redis_crdt_replica_slot_coverage_by_any_ovc: gauge
			redis_crdt_replica_slot_coverage_by_only_ovc: gauge
			redis_crdt_replica_slots: gauge
			redis_crdt_stale_replica: gauge
			redis_crdt_ts_key_headers: gauge

			# dmc
			dmcproxy_process_cpu_system_seconds_total: counter
			dmcproxy_process_cpu_usage_percent: gauge
			dmcproxy_process_cpu_user_seconds_total: counter
			dmcproxy_process_main_thread_cpu_system_seconds_total: counter
			dmcproxy_process_main_thread_cpu_user_seconds_total: counter
			dmcproxy_process_max_fds: counter
			dmcproxy_process_open_fds: gauge
			dmcproxy_process_resident_memory_bytes: gauge
			dmcproxy_process_start_time_seconds: gauge
			dmcproxy_process_virtual_memory_bytes: gauge

			# listener
			listener_acc_latency: gauge
			listener_acc_latency_max: counter
			listener_acc_other_latency: gauge
			listener_acc_other_latency_max: counter
			listener_acc_read_latency: gauge
			listener_acc_read_latency_max: counter
			listener_acc_write_latency: gauge
			listener_acc_write_latency_max: counter
			listener_auth_cmds: gauge
			listener_auth_cmds_max: counter
			listener_auth_errors: gauge
			listener_auth_errors_max: counter
			listener_cmd_flush: gauge
			listener_cmd_flush_max: counter
			listener_cmd_get: gauge
			listener_cmd_get_max: counter
			listener_cmd_set: gauge
			listener_cmd_set_max: counter
			listener_cmd_touch: gauge
			listener_cmd_touch_max: counter
			listener_conns: gauge
			listener_egress_bytes: gauge
			listener_egress_bytes_max: counter
			listener_ingress_bytes: gauge
			listener_ingress_bytes_max: counter
			listener_last_req_time: gauge
			listener_last_res_time: gauge
			listener_max_connections_exceeded: gauge
			listener_max_connections_exceeded_max: counter
			listener_monitor_sessions_count: gauge
			listener_other_req: gauge
			listener_other_req_max: counter
			listener_other_res: gauge
			listener_other_res_max: counter
			listener_other_started_res: gauge
			listener_other_started_res_max: counter
			listener_read_req: gauge
			listener_read_req_max: counter
			listener_read_res: gauge
			listener_read_res_max: counter
			listener_read_started_res: gauge
			listener_read_started_res_max: counter
			listener_total_connections_received: gauge
			listener_total_connections_received_max: counter
			listener_total_req: histogram
			listener_total_req_max: counter
			listener_total_res: histogram
			listener_total_res_max: counter
			listener_total_started_res: gauge
			listener_total_started_res_max: counter
			listener_write_req: gauge
			listener_write_req_max: counter
			listener_write_res: gauge
			listener_write_res_max: counter
			listener_write_started_res: gauge
			listener_write_started_res_max: counter

			# bdb big
			bdb_bigstore_inst_avg_del_io_queue: gauge
			bdb_bigstore_inst_avg_del_io_queue_max: counter
			bdb_bigstore_inst_avg_read_io_queue: gauge
			bdb_bigstore_inst_avg_read_io_queue_max: counter
			bdb_bigstore_inst_avg_write_io_queue: gauge
			bdb_bigstore_inst_avg_write_io_queue_max: counter
			bdb_bigstore_io_dels: counter
			bdb_bigstore_io_dels_max: counter
			bdb_bigstore_io_read_bytes: gauge
			bdb_bigstore_io_read_bytes_max: counter
			bdb_bigstore_io_reads: gauge
			bdb_bigstore_io_reads_max: counter
			bdb_bigstore_io_write_bytes: gauge
			bdb_bigstore_io_write_bytes_max: counter
			bdb_bigstore_io_writes: gauge
			bdb_bigstore_io_writes_max: counter
			bdb_bigstore_iops: gauge
			bdb_bigstore_iops_max: counter
			bdb_bigstore_kv_ops: gauge
			bdb_bigstore_kv_ops_max: counter
			bdb_bigstore_objs_clean: gauge
			bdb_bigstore_objs_clean_max: counter
			bdb_bigstore_objs_dirty: gauge
			bdb_bigstore_objs_dirty_max: counter
			bdb_bigstore_objs_flash: gauge
			bdb_bigstore_objs_ram: gauge
			bdb_bigstore_throughput: gauge
			bdb_bigstore_throughput_max: counter

			# bdb rocks
			bdb_rocks_L0_files: gauge
			bdb_rocks_L0_files_max: counter
			bdb_rocks_additional_ram_used_for_readers: gauge
			bdb_rocks_additional_ram_used_for_readers_max: counter
			bdb_rocks_comp_elapsed_micros: gauge
			bdb_rocks_comp_elapsed_micros_max: counter
			bdb_rocks_comp_input_bytes: gauge
			bdb_rocks_comp_input_bytes_max: counter
			bdb_rocks_comp_input_records: gauge
			bdb_rocks_comp_input_records_max: counter
			bdb_rocks_comp_output_bytes: gauge
			bdb_rocks_comp_output_bytes_max: counter
			bdb_rocks_comp_output_records: gauge
			bdb_rocks_comp_output_records_max: counter
			bdb_rocks_comp_records_deleted: gauge
			bdb_rocks_comp_records_deleted_max: counter
			bdb_rocks_comp_records_replaced: gauge
			bdb_rocks_comp_records_replaced_max: counter
			bdb_rocks_comp_running: counter
			bdb_rocks_dels_in_memtables: gauge
			bdb_rocks_dels_in_memtables_max: counter
			bdb_rocks_flush_data_size: gauge
			bdb_rocks_flush_data_size_max: counter
			bdb_rocks_flush_num_entries: gauge
			bdb_rocks_flush_num_entries_max: counter
			bdb_rocks_flush_running: counter
			bdb_rocks_flush_running_max: counter
			bdb_rocks_flush_writes_slowdown: gauge
			bdb_rocks_flush_writes_slowdown_max: counter
			bdb_rocks_flush_writes_stop: gauge
			bdb_rocks_flush_writes_stop_max: counter
			bdb_rocks_keys_in_memtables: gauge
			bdb_rocks_keys_in_memtables_max: counter
			bdb_rocks_keys_total: gauge
			bdb_rocks_keys_total_max: counter
			bdb_rocks_num_compactions_pending: gauge
			bdb_rocks_num_compactions_pending_max: counter
			bdb_rocks_num_immutable_mem_table: gauge
			bdb_rocks_num_immutable_mem_table_flushed: gauge
			bdb_rocks_num_immutable_mem_table_flushed_max: counter
			bdb_rocks_num_immutable_mem_table_max: counter
			bdb_rocks_num_mem_table_flush_pending: gauge
			bdb_rocks_num_mem_table_flush_pending_max: counter
			bdb_rocks_ram_used_for_mem_tables: gauge
			bdb_rocks_ram_used_for_mem_tables_max: counter
			bdb_rocks_size_on_disk: gauge
			bdb_rocks_size_on_disk_max: counter
			bdb_rocks_total_files: gauge
			bdb_rocks_total_files_max: counter

			# rocksdb
			redis_rocks_L0_files: gauge
			redis_rocks_additional_ram_used_for_readers: gauge
			redis_rocks_comp_completed: gauge
			redis_rocks_comp_elapsed_micros: gauge
			redis_rocks_comp_input_bytes: counter
			redis_rocks_comp_input_records: gauge
			redis_rocks_comp_output_bytes: counter
			redis_rocks_comp_output_records: gauge
			redis_rocks_comp_records_deleted: gauge
			redis_rocks_comp_records_replaced: gauge
			redis_rocks_comp_started: gauge
			redis_rocks_dels_in_memtables: gauge
			redis_rocks_flush_completed: counter
			redis_rocks_flush_data_size: gauge
			redis_rocks_flush_num_entries: gauge
			redis_rocks_flush_started: gauge
			redis_rocks_flush_writes_slowdown: gauge
			redis_rocks_flush_writes_stop: gauge
			redis_rocks_keys_in_memtables: gauge
			redis_rocks_keys_total: counter
			redis_rocks_num_compactions_pending: gauge
			redis_rocks_num_immutable_mem_table: gauge
			redis_rocks_num_immutable_mem_table_flushed: gauge
			redis_rocks_num_mem_table_flush_pending: gauge
			redis_rocks_ram_used_for_mem_tables: gauge
			redis_rocks_size_on_disk: gauge
			redis_rocks_total_files: counter

			# flash
			node_flash_read_iops: histogram
			node_flash_read_iops_max: counter
			node_flash_read_iops_median: gauge
			node_flash_read_iops_min: gauge
			node_flash_read_throughput: histogram
			node_flash_read_throughput_max: counter
			node_flash_read_throughput_median: gauge
			node_flash_read_throughput_min: gauge
			node_flash_read_time: histogram
			node_flash_read_time_max: counter
			node_flash_read_time_median: gauge
			node_flash_read_time_min: gauge
			node_flash_write_iops: histogram
			node_flash_write_iops_max: counter
			node_flash_write_iops_median: gauge
			node_flash_write_iops_min: gauge
			node_flash_write_throughput: histogram
			node_flash_write_throughput_max: counter
			node_flash_write_throughput_median: gauge
			node_flash_write_throughput_min: gauge
			node_flash_write_time: histogram
			node_flash_write_time_max: counter
			node_flash_write_time_median: gauge
			node_flash_write_time_min: gauge

    ## @param send_histograms_buckets - boolean - optional - default: true
    ## Set send_histograms_buckets to true to send the histograms bucket.
    #
    # send_histograms_buckets: true

    ## @param send_monotonic_counter - boolean - optional - default: true
    ## Set send_monotonic_counter to true to send counters as monotonic counter.
    #
    # send_monotonic_counter: true

    ## @param exclude_labels - list of strings - optional
    ## A list of labels to be excluded.
    #
    # exclude_labels:
    #   - timestamp

    ## @param ssl_cert - string - optional
    ## If your Prometheus endpoint is secured, here are the settings to configure it:
    ## Can either be only the path to the certificate where you specify the private key
    ## or it can be the path to a file containing both the certificate and the private key.
    #
    # ssl_cert: <CERT_PATH>

    ## @param ssl_private_key - string - optional
    ## Needed if the certificate does not include the private key.
    ## WARNING: The private key to your local certificate must be unencrypted.
    #
    # ssl_private_key: <KEY_PATH>

    ## @param ssl_ca_cert - string - optional
    ## The path to the trusted CA used for generating custom certificates. Set this to false to disable SSL
    ## certificate verification.
    #
    #  ssl_ca_cert: "false"

    ## @param prometheus_timeout - integer - optional - default: 10
    ## Set a timeout in seconds for the Prometheus query.
    #
    # prometheus_timeout: 10

    ## @param max_returned_metrics - integer - optional - default: 2000
    ## The check limits itself to 2000 metrics by default, increase this limit if needed.
    #
    max_returned_metrics: 2000

## @param tags - list of strings - optional
## A list of tags to attach to every metric and service check emitted by this instance.
##
## Learn more about tagging at https://docs.datadoghq.com/tagging
#
# tags:
#   - <KEY_1>:<VALUE_1>
#   - <KEY_2>:<VALUE_2>

## @param service - string - optional
## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
##
## Overrides any `service` defined in the `init_config` section.
#
# service: <SERVICE>

## @param min_collection_interval - number - optional - default: 15
## This changes the collection interval of the check. For more information, see:
## https://docs.datadoghq.com/developers/write_agent_check/#collection-interval
#
# min_collection_interval: 15

## @param empty_default_hostname - boolean - optional - default: false
## This forces the check to send metrics with no hostname.
##
## This is useful for cluster-level checks.
#
# empty_default_hostname: false

## @param metric_patterns - mapping - optional
## A mapping of metrics to include or exclude, with each entry being a regular expression.
##
## Metrics defined in `exclude` will take precedence in case of overlap.
#
# metric_patterns:
#   include:
#   - <INCLUDE_REGEX>
#   exclude:
#   - <EXCLUDE_REGEX>
